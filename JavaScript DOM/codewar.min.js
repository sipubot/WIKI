function GivemeaDiamond(r) {
  if (r < 1 || r % 2 != 1) return null;
  if (r > 2 && r % 2 == 1) {
    var n = Math.floor(r / 2);
    return Array.apply(null, Array(r)).map(function(t, e) {
      return " ".repeat(Math.abs(n - e)) + "*".repeat(r - 2 * Math.abs(n - e)) + "\n"
    }).join("")
  }
}

function persistence(r) {
  for (var n = 0; r > 9;) r = function(r) {
    return r.toString().split("").reduce(function(r, n) {
      return r * parseInt(n)
    }, 1)
  }(r), n++;
  return n
}

function gcd(r, n) {
  return 0 === r ? n : gcd(n % r, r)
}

function mixedFraction(r) {
  var n = [],
    t = parseInt(r.split("/")[0]),
    e = parseInt(r.split("/")[1]),
    i = t * e < 0 ? "-" : "";
  if (0 === e) throw new Error("Invalid dividend");
  if (t / e == 0) return "0";
  if (t = Math.abs(t), e = Math.abs(e), 0 !== Math.floor(t / e) && n.push(Math.floor(t / e).toString()), t % e > 0) {
    var u = gcd(e, t % e);
    n.push((t % e / u).toString() + "/" + (e / u).toString())
  }
  return i + n.join(" ")
}

function sortTwisted37(r) {
  function n(r) {
    return r.map(function(r, n) {
      var t = r.toString().split("");
      return t = t.map(function(r, n) {
        return "3" === r ? "7" : "7" === r ? "3" : r
      }), parseInt(t.join(""))
    })
  }
  return r = n(r), r.sort(function(r, n) {
    return r - n
  }), r = n(r)
}

function dirReduc(r) {
  for (var n = r.join(""), t = /NORTHSOUTH|EASTWEST|SOUTHNORTH|WESTEAST/; t.test(n);) n = n.replace(t, "");
  return n.match(/(NORTH|SOUTH|EAST|WEST)/g) || []
}

function digitize(r) {
  return r.toString().split("").reverse().map(function(r, n) {
    return parseInt(r)
  })
}

function digPow(r, n) {
  var t = r.toString().split("").reduce(function(r, t, e) {
    return r + Math.pow(Number(t), e + n)
  }, 0);
  return t % r == 0 ? t / r : -1
}

function abbreviate(r) {
  return r.replace(/\w{4,}/g, function(r) {
    return r[0] + (r.length - 2) + r.slice(-1)
  })
}

function ipToInt32(r) {
  return r = r.split("."),
    (r[0] << 24) + (r[1] << 16) + (r[2] << 8) + (r[3] << 0) >>> 0
}

function factorial(r) {
  return r < 2 ? 1 : factorial(r - 1) * r
}

function autocomplete(r, n) {
  var t = new RegExp("^" + r.replace(/[^a-z]/gi, ""), "i");
  return n.filter(function(r) {
    return t.test(r)
  }).slice(0, 5)
}

function reverseWords(r) {
  return r.split(" ").map(function(r, n) {
    return r.split("").reverse().join("")
  }).join(" ")
}

function order(r) {
  return r.split(" ").sort(function(r, n) {
    return r.match(/\d/) - n.match(/\d/)
  }).join(" ")
}

function WhatIsTheTime(r) {
  var n = r.split(":");
  return n[0] = parseInt(n[0]), n[1] = parseInt(n[1]),
    n[1] = n[1] > 0 ? 60 - n[1] : 0, 0 === n[1] ? n[0] = n[0] < 12 ? 12 - n[0] : 12 : (n[0]++, n[0] > 12 ? n[0] = 11 : n[0] = n[0] < 12 ? 12 - n[0] : 12), n.map(function(r) {
      return r = r < 10 ? "0" + r : "" + r
    }).join(":")
}

function reverser(r) {
  return r.split(" ").map(function(r) {
    return r.split("").reverse().join("")
  }).join(" ")
}

function gap(r, n, t) {
  for (var e = 0, i = n; i <= t; i++)
    if (function(r) {
        for (var n = 2; n * n <= r; n++)
          if (r % n == 0) return !1;
        return !0
      }(i)) {
      if (i - e == r) return [e, i];
      e = i
    }
  return null
}

function sumTriangularNumbers(r) {
  return r < 0 ? 0 : r * (r + 1) * (r + 2) / 6
}

function incrementString(r) {
  return isNaN(parseInt(r[r.length - 1])) ? r + "1" : r.replace(/(0*)([0-9]+$)/, function(r, n, t) {
    var e = parseInt(t) + 1;
    return e.toString().length > t.length ? n.slice(0, -1) + e : n + e
  })
}

function sqInRect(r, n) {
  if (r === n) return null;
  for (var t = [r, n], e = []; 0 !== t[0];) t = t.sort(function(r, n) {
    return r - n
  }), e.push(t[0]), t[1] = t[1] - t[0];
  return e.pop(), e
}

function countSmileys(r) {
  var n = ["-", "~"],
    t = [")", "D"],
    e = [":", ";"],
    i = 0;
  return r.map(function(r) {
    var u = r.split("");
    return !(u.length < 2 || u.length > 3) && ((3 !== u.length || n.indexOf(u[1]) !== -1) && void(e.indexOf(u[0]) > -1 && t.indexOf(u[u.length - 1]) > -1 && i++))
  }), i
}

function sortArray(r) {
  var n = [],
    t = [];
  return r.map(function(r, e) {
    1 !== r && (r - 1) % 2 != 0 || (n.push(r), t.push(e))
  }), n.sort(function(r, n) {
    return r - n
  }), t.map(function(t, e) {
    r[t] = n[e]
  }), r
}

function dashatize(r) {
  return String(r).replace(/([13579])/g, "-$1-").replace(/--+/g, "-").replace(/(^-|-$)/g, "")
}

function productFib(r) {
  function n(r) {
    return r < 1 ? 0 : r <= 2 ? 1 : n(r - 1) + n(r - 2)
  }
  for (var t, e, i = 1; r >= t * e;) i++, t = n(i), e = n(i + 1);
  return t * e === r ? [t, e, !0] : [t, e, !1]
}

function listSquared(r, n) {
  for (var t = [], e = r; e <= n; e++) void 0 !== chkDiver(e) && t.push(chkDiver(e));
  return t
}

function chkDiver(r) {
  for (var n = {}, t = 1; t <= r; t++) r % t == 0 && (n[t] = "di");
  var e = 0,
    i = 0;
  if (Object.keys(n).map(function(r) {
      e += Number(r) * Number(r), i = Number(r)
    }), Math.sqrt(e) % 1 == 0) return [i, e]
}

function distinct(r) {
  return Array.from(new Set(r))
}

function domainName(r) {
  return r.match(/(?:http(?:s)?:\/\/)?(?:w{3}\.)?([^\.]+)/i)[1]
}

function reverse(r) {
  return "" === r ? "" : reverse(r.substr(1)) + r.charAt(0)
}

function replace(r) {
  return r.replace(/[aeoiu]/gi, "!")
}
longestPalindrome = function(r) {
  var n = r.slice(0),
    t = !1,
    e = 0;
  n = n.split("").reverse();
  for (var i = 0; i < n.length; i++) {
    for (var u = n.length - i; u <= n.length; u++) {
      var o = n.slice(u - (n.length - i), u);
      r.indexOf(o.join("")) > -1 && o.join("") === o.reverse().join("") && (e = o.length, t = !0)
    }
    if (t) break
  }
  return e
};
var maxSequence = function(r) {
  for (var n = 0, t = 0, e = 0; e < r.length; e++) n = Math.max(0, n + r[e]), t = Math.max(t, n);
  return t
};
